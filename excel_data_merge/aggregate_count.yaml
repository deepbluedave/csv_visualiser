# config_summary_full_demo.yaml

# --- Output Settings ---
output_file: './output/application_summary_report_full.xlsx'

# --- Master Source ---
master_source:
  file_path: './master_app_list_q4.xlsx' # Renamed to .xlsx
  sheet_name: Sheet1
  primary_key_column: Application ID
  include_master_columns:
    Application ID: AppID
    Application Name: ApplicationName
    Business Owner: BusinessOwner
    Grade: AppGrade
    Status: MasterAppStatus

# --- Summary Definitions ---
summary_definitions:

  # === Examples using exceptions_log_current.xlsx ===

  - output_column_name: HasPendingException # EXISTS aggregation
    source_file: './exceptions_log_current.xlsx' # Renamed
    source_sheet: Sheet1
    foreign_key_column: App ID
    aggregation: exists
    filters:
      - column: Approval Status
        operator: ==
        value: Pending

  - output_column_name: ActiveApprovedExceptionCount # DATE >= TODAY
    source_file: './exceptions_log_current.xlsx'
    source_sheet: Sheet1
    foreign_key_column: App ID
    aggregation: count
    filters:
      - column: Approval Status
        operator: ==
        value: Approved
      - column: Expiry Date
        operator: '>='
        value: 'TODAY'

  - output_column_name: ExpiredExceptionCount # DATE < TODAY
    source_file: './exceptions_log_current.xlsx'
    source_sheet: Sheet1
    foreign_key_column: App ID
    aggregation: count
    filters:
      - column: Expiry Date
        operator: '<'
        value: 'TODAY'

  - output_column_name: HighOrMediumRiskExceptionCount # IN operator
    source_file: './exceptions_log_current.xlsx'
    source_sheet: Sheet1
    foreign_key_column: App ID
    aggregation: count
    filters:
      - column: Risk
        operator: in
        value: ['High', 'Medium']
      - column: Approval Status # Combine with AND
        operator: in
        value: ['Approved', 'Pending']

  - output_column_name: ExceptionMissingRisk # ISNULL operator
    source_file: './exceptions_log_current.xlsx'
    source_sheet: Sheet1
    foreign_key_column: App ID
    aggregation: exists # Flag if any exception for the app is missing risk
    filters:
      - column: Risk
        operator: isnull

  - output_column_name: LowRiskApprovedExceptionCount # NOT IN operator example
    source_file: './exceptions_log_current.xlsx'
    source_sheet: Sheet1
    foreign_key_column: App ID
    aggregation: count
    filters:
      - column: Risk # Specifically Low or Acceptable risk
        operator: in
        value: ['Low', 'Acceptable']
      - column: Approval Status # Must be approved
        operator: ==
        value: Approved
      # Example: Ensure Summary does NOT contain certain keywords
      - column: Summary
        operator: not in # Assuming Summary sometimes contains standard phrases to ignore
        value: ['Standard Renewal', 'Temporary Access Granted']


  # === Examples using infra_scan_results_oct.xlsx ===

  - output_column_name: UrgentInfraFindingCount # Simple COUNT with filters
    source_file: './infra_scan_results_oct.xlsx' # Renamed
    source_sheet: Sheet1
    foreign_key_column: Target App ID
    aggregation: count
    filters:
      - column: Rating
        operator: ==
        value: Urgent
      - column: Status
        operator: in
        value: ['Action Needed', 'Needs Review']

  - output_column_name: HasLog4jFinding # CONTAINS operator (simple case)
    source_file: './infra_scan_results_oct.xlsx'
    source_sheet: Sheet1
    foreign_key_column: Target App ID
    aggregation: exists
    filters:
      - column: Finding Summary # Check if summary contains 'log4j' (case-insensitive via script)
        operator: contains
        value: 'log4j'

  - output_column_name: CRMWebFindingCount # STARTSWITH operator
    source_file: './infra_scan_results_oct.xlsx'
    source_sheet: Sheet1
    foreign_key_column: Target App ID
    aggregation: count
    filters:
      - column: Hostname
        operator: startswith
        value: 'vm-crm-web-'

  - output_column_name: UrgentFindingWithDesc # NOTNULL operator combined with ==
    source_file: './infra_scan_results_oct.xlsx'
    source_sheet: Sheet1
    foreign_key_column: Target App ID
    aggregation: count
    filters:
      - column: Description
        operator: notnull # Ensure description exists
      - column: Rating
        operator: ==
        value: Urgent # Only count Urgent ones that have a description


  # === Examples using web_vuln_scan_nov.xlsx ===

  - output_column_name: CriticalOpenWebVulnCount # Basic COUNT
    source_file: './web_vuln_scan_nov.xlsx' # Renamed
    source_sheet: Sheet1
    foreign_key_column: CARID
    aggregation: count
    filters:
      - column: Severity
        operator: ==
        value: Critical
      - column: Finding Status
        operator: ==
        value: Open

  - output_column_name: HasSQLiOrXSS # REGEX operator for OR condition on text
    source_file: './web_vuln_scan_nov.xlsx'
    source_sheet: Sheet1
    foreign_key_column: CARID
    aggregation: exists
    filters:
      - column: Vulnerability Name
        operator: regex # Match 'SQL Injection' OR 'Cross-Site Scripting', case insensitive
        value: '(?i)(SQL Injection|Cross-Site Scripting)'
      - column: Finding Status # Only if Open or Patched (not False Positive)
        operator: in
        value: ['Open', 'Patched']


  # === Examples using NEW code_scan_results.xlsx ===

  - output_column_name: TotalSecretsFoundHighSev # SUM aggregation with filter
    source_file: './code_scan_results.xlsx'
    source_sheet: Sheet1
    foreign_key_column: AppRefID
    aggregation: sum
    aggregation_column: SecretCount # Column to SUM
    filters:
      - column: SeverityRating # Only sum if severity is >= 4
        operator: '>='
        value: 4
      - column: Status # Exclude false positives
        operator: '!='
        value: 'False Positive'

  - output_column_name: PHPScriptSecretCount # ENDSWITH operator with SUM
    source_file: './code_scan_results.xlsx'
    source_sheet: Sheet1
    foreign_key_column: AppRefID
    aggregation: sum
    aggregation_column: SecretCount
    filters:
      - column: FilePath
        operator: endswith
        value: '.php' # Sum secrets found in PHP files

  - output_column_name: HasSensitiveFileFinding # REGEX operator on file paths
    source_file: './code_scan_results.xlsx'
    source_sheet: Sheet1
    foreign_key_column: AppRefID
    aggregation: exists
    filters:
      - column: FilePath # Use regex to find common key/cert file extensions
        operator: regex
        # Matches paths ending with .pem, .key, .p12 OR containing /id_rsa (case insensitive)
        value: '(?i)(\.pem$|\.key$|\.p12$|/id_rsa)'
      - column: Status # Exclude false positives
        operator: '!='
        value: 'False Positive'

# --- Optional: Define final Excel column order ---
excel_column_order:
  # Master Info
  - AppID
  - ApplicationName
  - BusinessOwner
  - AppGrade
  - MasterAppStatus
  # Exception Summaries
  - HasPendingException
  - ActiveApprovedExceptionCount
  - ExpiredExceptionCount
  - HighOrMediumRiskExceptionCount
  - ExceptionMissingRisk
  - LowRiskApprovedExceptionCount
  # Infra Scan Summaries
  - UrgentInfraFindingCount
  - HasLog4jFinding
  - CRMWebFindingCount
  - UrgentFindingWithDesc
  # Web Vuln Summaries
  - CriticalOpenWebVulnCount
  - HasSQLiOrXSS
  # Code Scan Summaries
  - TotalSecretsFoundHighSev
  - PHPScriptSecretCount
  - HasSensitiveFileFinding